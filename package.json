{
  "name": "peruzzo-backend-prisma",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "start": "nest start --watch",
    "docker-db:start": "docker compose up peruzzo-postgresdb --build",
    "docker-db:rebuild": "pnpm docker-db:reset && docker-compose up peruzzo-postgresdb",
    "docker-db:reset": "docker compose down -v",
    "docker:prod": "docker compose -f docker-compose.prod.yml up --build",
    "docker:prod:down": "docker compose -f docker-compose.prod.yml down",
    "docker:staging": "docker compose -f docker-compose.staging.yml up --build",
    "docker:staging:down": "docker compose -f docker-compose.staging.yml down",
    "start:dev": "pnpm sync:dev && cross-env NODE_ENV=DEVELOPMENT nest start --watch",
    "start:staging": "pnpm sync:staging && cross-env NODE_ENV=STAGING node dist/src/main",
    "start:prod": "pnpm sync:prod && cross-env NODE_ENV=PRODUCTION node dist/src/main",
    "start:debug": "nest start --debug --watch",
    "prisma:migrate": "prisma migrate dev",
    "prisma:studio": "prisma studio",
    "build:dev": "cross-env NODE_ENV=DEVELOPMENT nest build",
    "build:staging": "cross-env NODE_ENV=STAGING nest build",
    "build:prod": "cross-env NODE_ENV=PRODUCTION nest build",
    "sync:dev": "dotenv -e .env.development npx prisma db push",
    "sync:staging": "dotenv -e .env.staging npx prisma db push",
    "sync:prod": "dotenv -e .env.production npx prisma db push",
    "generate": "prisma generate",
    "reset-prisma:migration": "prisma migrate reset",
    "generate:sync:dev": "prisma generate && dotenv -e .env.development npx prisma db push",
    "generate:sync:staging": "prisma generate && dotenv -e .env.staging npx prisma db push",
    "generate:sync:prod": "prisma generate && dotenv -e .env.production npx prisma db push",
    "seed:dev": "dotenv -e .env.development ts-node ./prisma/seed.ts",
    "seed:staging": "dotenv -e .env.staging ts-node ./prisma/seed.ts",
    "seed:prod": "dotenv -e .env.production ts-node ./prisma/seed.ts",
    "migration": "npx prisma migrate dev",
    "certbot": "certbot certonly --config-dir ./certbot && sudo certbot renew --dry-run",
    "lint": "eslint \"{src,test}/**/*.ts\"",
    "lint:fix": "pnpm lint --fix"
  },
  "dependencies": {
    "@apollo/server": "^4.9.4",
    "@nestjs/apollo": "^12.0.9",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.1.1",
    "@nestjs/core": "^10.0.0",
    "@nestjs/graphql": "^12.0.9",
    "@nestjs/jwt": "^10.1.1",
    "@nestjs/passport": "^10.0.2",
    "@nestjs/platform-express": "^10.0.0",
    "@prisma/client": "^5.3.1",
    "@types/passport-jwt": "^3.0.10",
    "axios": "^1.5.1",
    "bcryptjs": "^2.4.3",
    "chokidar": "^3.5.3",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "dotenv": "^16.3.1",
    "graphql": "^16.8.1",
    "helmet": "^7.0.0",
    "lodash": "^4.17.21",
    "passport": "^0.6.0",
    "passport-discord": "^0.1.4",
    "passport-facebook": "^3.0.0",
    "passport-figma2": "^1.0.0",
    "passport-github2": "^0.1.12",
    "passport-gitlab2": "^5.0.0",
    "passport-google-oauth20": "^2.0.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "prisma": "^5.3.1",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.1",
    "twitch-passport": "^1.0.6",
    "uuid": "^9.0.1"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.3.1",
    "@types/supertest": "^2.0.12",
    "@typescript-eslint/eslint-plugin": "^5.59.11",
    "@typescript-eslint/parser": "^5.59.11",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-plugin-prettier": "^4.2.1",
    "jest": "^29.5.0",
    "prettier": "^2.8.8",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
